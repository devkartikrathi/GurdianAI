"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/trades/upload/route";
exports.ids = ["app/api/trades/upload/route"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftrades%2Fupload%2Froute&page=%2Fapi%2Ftrades%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrades%2Fupload%2Froute.ts&appDir=C%3A%5CUsers%5Ckarti%5CUnknown%5CGurdianAI%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckarti%5CUnknown%5CGurdianAI%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftrades%2Fupload%2Froute&page=%2Fapi%2Ftrades%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrades%2Fupload%2Froute.ts&appDir=C%3A%5CUsers%5Ckarti%5CUnknown%5CGurdianAI%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckarti%5CUnknown%5CGurdianAI%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_karti_Unknown_GurdianAI_project_src_app_api_trades_upload_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/trades/upload/route.ts */ \"(rsc)/./src/app/api/trades/upload/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/trades/upload/route\",\n        pathname: \"/api/trades/upload\",\n        filename: \"route\",\n        bundlePath: \"app/api/trades/upload/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\karti\\\\Unknown\\\\GurdianAI\\\\project\\\\src\\\\app\\\\api\\\\trades\\\\upload\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_karti_Unknown_GurdianAI_project_src_app_api_trades_upload_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/trades/upload/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0cmFkZXMlMkZ1cGxvYWQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnRyYWRlcyUyRnVwbG9hZCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnRyYWRlcyUyRnVwbG9hZCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNrYXJ0aSU1Q1Vua25vd24lNUNHdXJkaWFuQUklNUNwcm9qZWN0JTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNrYXJ0aSU1Q1Vua25vd24lNUNHdXJkaWFuQUklNUNwcm9qZWN0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNzQztBQUNuSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2d1YXJkaWFuLWFpLz9mYTlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXGthcnRpXFxcXFVua25vd25cXFxcR3VyZGlhbkFJXFxcXHByb2plY3RcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcdHJhZGVzXFxcXHVwbG9hZFxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdHJhZGVzL3VwbG9hZC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3RyYWRlcy91cGxvYWRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3RyYWRlcy91cGxvYWQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxrYXJ0aVxcXFxVbmtub3duXFxcXEd1cmRpYW5BSVxcXFxwcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHRyYWRlc1xcXFx1cGxvYWRcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3RyYWRlcy91cGxvYWQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftrades%2Fupload%2Froute&page=%2Fapi%2Ftrades%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrades%2Fupload%2Froute.ts&appDir=C%3A%5CUsers%5Ckarti%5CUnknown%5CGurdianAI%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckarti%5CUnknown%5CGurdianAI%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/trades/upload/route.ts":
/*!********************************************!*\
  !*** ./src/app/api/trades/upload/route.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! papaparse */ \"(rsc)/./node_modules/papaparse/papaparse.js\");\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(papaparse__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v4/classic/schemas.js\");\n\n\n\n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://bksuopgctsoboneluiet.supabase.co\", \"sb_secret_F9wc9MEQ0lGof4VHZSZCwA_346j8gWS\");\n// Trade schema validation\nconst TradeSchema = zod__WEBPACK_IMPORTED_MODULE_3__.object({\n    symbol: zod__WEBPACK_IMPORTED_MODULE_3__.string().min(1),\n    trade_type: zod__WEBPACK_IMPORTED_MODULE_3__[\"enum\"]([\n        \"BUY\",\n        \"SELL\"\n    ]),\n    quantity: zod__WEBPACK_IMPORTED_MODULE_3__.number().positive(),\n    price: zod__WEBPACK_IMPORTED_MODULE_3__.number().positive(),\n    trade_datetime: zod__WEBPACK_IMPORTED_MODULE_3__.string()\n});\nasync function POST(request) {\n    try {\n        const { userId: clerkUserId } = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_4__.auth)();\n        if (!clerkUserId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Get or create user record\n        let { data: userData, error: userError } = await supabase.from(\"users\").select(\"id\").eq(\"clerk_user_id\", clerkUserId).single();\n        if (userError && userError.code !== \"PGRST116\") {\n            console.error(\"User lookup error:\", userError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User not found\"\n            }, {\n                status: 404\n            });\n        }\n        // If user doesn't exist, create one (this should be handled by a webhook in production)\n        if (!userData) {\n            // For now, return an error - in production this should be handled by Clerk webhooks\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User profile not found. Please contact support.\"\n            }, {\n                status: 404\n            });\n        }\n        const userId = userData.id;\n        const formData = await request.formData();\n        const file = formData.get(\"file\");\n        if (!file) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"No file provided\"\n            }, {\n                status: 400\n            });\n        }\n        if (!file.name.toLowerCase().endsWith(\".csv\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"File must be a CSV\"\n            }, {\n                status: 400\n            });\n        }\n        // Read and parse CSV\n        const text = await file.text();\n        const { data, errors: parseErrors } = papaparse__WEBPACK_IMPORTED_MODULE_2___default().parse(text, {\n            header: true,\n            skipEmptyLines: true\n        });\n        if (parseErrors.length > 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"CSV parsing failed\",\n                details: parseErrors\n            }, {\n                status: 400\n            });\n        }\n        // Auto-detect column mapping\n        const columns = Object.keys(data[0] || {});\n        const mapping = detectColumnMapping(columns, data[0]);\n        if (!mapping) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Could not detect required columns. Please ensure your CSV contains: symbol, trade type, quantity, price, and date/time columns.\"\n            }, {\n                status: 400\n            });\n        }\n        // Process trades\n        const processedTrades = [];\n        const validationErrors = [];\n        for(let i = 0; i < data.length; i++){\n            const row = data[i];\n            try {\n                const trade = {\n                    symbol: row[mapping.symbol]?.toString().trim(),\n                    trade_type: row[mapping.trade_type]?.toString().trim().toUpperCase(),\n                    quantity: parseFloat(row[mapping.quantity]) || 0,\n                    price: parseFloat(row[mapping.price]) || 0,\n                    trade_datetime: parseDateTime(row[mapping.datetime])\n                };\n                const validatedTrade = TradeSchema.parse(trade);\n                processedTrades.push({\n                    ...validatedTrade,\n                    user_id: userId,\n                    source: \"csv\",\n                    amount: validatedTrade.quantity * validatedTrade.price\n                });\n            } catch (error) {\n                validationErrors.push(`Row ${i + 1}: ${error}`);\n            }\n        }\n        if (processedTrades.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"No valid trades found in CSV\"\n            }, {\n                status: 400\n            });\n        }\n        // Insert trades into database\n        const { error: insertError } = await supabase.from(\"raw_trades\").insert(processedTrades);\n        if (insertError) {\n            console.error(\"Database insert error:\", insertError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to save trades to database\"\n            }, {\n                status: 500\n            });\n        }\n        // Process trade matching (simplified)\n        const matchedTrades = await processTradeMatching(userId, processedTrades);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            total_trades: processedTrades.length,\n            matched_trades: matchedTrades.length,\n            message: `Successfully processed ${processedTrades.length} trades. ${matchedTrades.length} trades were matched.`,\n            errors: validationErrors.length > 0 ? validationErrors : undefined\n        });\n    } catch (error) {\n        console.error(\"Upload error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nfunction detectColumnMapping(columns, sampleRow) {\n    const mapping = {};\n    // Common column name patterns\n    const columnPatterns = {\n        symbol: [\n            \"symbol\",\n            \"stock\",\n            \"instrument\",\n            \"scrip\",\n            \"ticker\"\n        ],\n        trade_type: [\n            \"type\",\n            \"side\",\n            \"action\",\n            \"buy/sell\",\n            \"transaction\"\n        ],\n        quantity: [\n            \"quantity\",\n            \"qty\",\n            \"shares\",\n            \"lots\",\n            \"volume\"\n        ],\n        price: [\n            \"price\",\n            \"rate\",\n            \"value\"\n        ],\n        datetime: [\n            \"date\",\n            \"time\",\n            \"datetime\",\n            \"timestamp\",\n            \"execution_time\"\n        ]\n    };\n    for (const [key, patterns] of Object.entries(columnPatterns)){\n        const found = columns.find((col)=>patterns.some((pattern)=>col.toLowerCase().includes(pattern.toLowerCase())));\n        if (found) {\n            mapping[key] = found;\n        }\n    }\n    // Validate we have all required fields\n    const required = [\n        \"symbol\",\n        \"trade_type\",\n        \"quantity\",\n        \"price\",\n        \"datetime\"\n    ];\n    const hasAllRequired = required.every((field)=>mapping[field]);\n    return hasAllRequired ? mapping : null;\n}\nfunction parseDateTime(dateTimeStr) {\n    // Try multiple date formats\n    const formats = [\n        \"DD/MM/YYYY HH:mm:ss\",\n        \"YYYY-MM-DD HH:mm:ss\",\n        \"MM/DD/YYYY HH:mm:ss\",\n        \"DD-MM-YYYY HH:mm:ss\"\n    ];\n    for (const format of formats){\n        try {\n            // Simple parsing - in production use a proper date library\n            const date = new Date(dateTimeStr);\n            if (!isNaN(date.getTime())) {\n                return date.toISOString();\n            }\n        } catch (error) {\n            continue;\n        }\n    }\n    // Fallback to current time\n    return new Date().toISOString();\n}\nasync function processTradeMatching(userId, trades) {\n    // Simplified trade matching logic\n    // In production, this would be more sophisticated\n    const buyTrades = trades.filter((t)=>t.trade_type === \"BUY\");\n    const sellTrades = trades.filter((t)=>t.trade_type === \"SELL\");\n    const matched = [];\n    for (const buy of buyTrades){\n        const matchingSell = sellTrades.find((sell)=>sell.symbol === buy.symbol && sell.quantity === buy.quantity);\n        if (matchingSell) {\n            matched.push({\n                user_id: userId,\n                symbol: buy.symbol,\n                quantity: buy.quantity,\n                buy_price: buy.price,\n                sell_price: matchingSell.price,\n                pnl: (matchingSell.price - buy.price) * buy.quantity,\n                pnl_pct: (matchingSell.price - buy.price) / buy.price * 100,\n                buy_datetime: buy.trade_datetime,\n                sell_datetime: matchingSell.trade_datetime,\n                duration: new Date(matchingSell.trade_datetime).getTime() - new Date(buy.trade_datetime).getTime(),\n                trade_session_date: new Date(buy.trade_datetime).toISOString().split(\"T\")[0]\n            });\n        }\n    }\n    // Insert matched trades\n    if (matched.length > 0) {\n        await supabase.from(\"matched_trades\").insert(matched);\n    }\n    return matched;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/trades/upload/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@clerk","vendor-chunks/next","vendor-chunks/cookie","vendor-chunks/zod","vendor-chunks/papaparse"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftrades%2Fupload%2Froute&page=%2Fapi%2Ftrades%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrades%2Fupload%2Froute.ts&appDir=C%3A%5CUsers%5Ckarti%5CUnknown%5CGurdianAI%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckarti%5CUnknown%5CGurdianAI%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();